{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "GNkzTFfynsmV"
   },
   "source": [
    "## Predict Minimum Temps"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This notebook is to predict minimun daily temperatures in Australia using Tensorflow and Kersa."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "56XEQOGknrAk"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2.0.0-dev20191002\n"
     ]
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "print(tf.__version__)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "sLl52leVp5wU"
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "def plot_series(time, series, format=\"-\", start=0, end=None):\n",
    "    plt.plot(time[start:end], series[start:end], format)\n",
    "    plt.xlabel(\"Time\")\n",
    "    plt.ylabel(\"Value\")\n",
    "    plt.grid(True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I downloaded this dataset to my machine's directory, so I don't need this code below"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 0,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "tP7oqUdkk0gY"
   },
   "outputs": [],
   "source": [
    "#!wget --no-check-certificate \\\n",
    "#    https://raw.githubusercontent.com/jbrownlee/Datasets/master/daily-min-temperatures.csv \\\n",
    "#    -O /tmp/daily-min-temperatures.csv"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Load the data and display some values to get a look."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Temp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1981-01-01</td>\n",
       "      <td>20.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1981-01-02</td>\n",
       "      <td>17.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>1981-01-03</td>\n",
       "      <td>18.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>1981-01-04</td>\n",
       "      <td>14.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>1981-01-05</td>\n",
       "      <td>15.8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Date  Temp\n",
       "0  1981-01-01  20.7\n",
       "1  1981-01-02  17.9\n",
       "2  1981-01-03  18.8\n",
       "3  1981-01-04  14.6\n",
       "4  1981-01-05  15.8"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "df = pd.read_csv('daily-min-temperatures.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3650, 2)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create the series time steps"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "NcG9r1eClbTh"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import csv\n",
    "time_step = []\n",
    "temps = []\n",
    "\n",
    "with open('daily-min-temperatures.csv') as csvfile: #read from the samedirectory as the Notebook\n",
    "    reader = csv.reader(csvfile, delimiter=',')\n",
    "    next(reader)\n",
    "    step = 0\n",
    "    for row in reader:\n",
    "        temps.append(float(row[1]))\n",
    "        time_step.append(step) # HAVE TIME STEPS BE numbers 1, 2, 3, 4 etc\n",
    "        step += 1 # adds 1 step each iteration of the for loop\n",
    "\n",
    "series = np.array(temps)\n",
    "time = np.array(time_step)\n",
    "plt.figure(figsize=(10, 6))\n",
    "plot_series(time, series)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Create Training and Validation sets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "L92YRw_IpCFG"
   },
   "outputs": [],
   "source": [
    "split_time = 2500\n",
    "time_train = time[:split_time]\n",
    "x_train = series[:split_time]\n",
    "time_valid = time[split_time:]\n",
    "x_valid = series[split_time:] \n",
    "\n",
    "window_size = 30\n",
    "batch_size = 32 # Feed the data to the training algorithm in batches to speed training\n",
    "shuffle_buffer_size = 1000\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "lJwUUZscnG38"
   },
   "outputs": [],
   "source": [
    "def windowed_dataset(series, window_size, batch_size, shuffle_buffer):\n",
    "    series = tf.expand_dims(series, axis=-1)\n",
    "    ds = tf.data.Dataset.from_tensor_slices(series)\n",
    "    ds = ds.window(window_size + 1, shift=1, drop_remainder=True)\n",
    "    ds = ds.flat_map(lambda w: w.batch(window_size + 1))\n",
    "    ds = ds.shuffle(shuffle_buffer) # important to shuffle the data so training isn't biased to initial values in dataset. \n",
    "    ds = ds.map(lambda w: (w[:-1], w[1:]))\n",
    "    return ds.batch(batch_size).prefetch(1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " Create function for predicting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "4XwGrf-A_wF0"
   },
   "outputs": [],
   "source": [
    "def model_forecast(model, series, window_size):\n",
    "    ds = tf.data.Dataset.from_tensor_slices(series)\n",
    "    ds = ds.window(window_size, shift=1, drop_remainder=True)\n",
    "    ds = ds.flat_map(lambda w: w.batch(window_size))\n",
    "    ds = ds.batch(32).prefetch(1)\n",
    "    forecast = model.predict(ds)\n",
    "    return forecast"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Build model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "colab_type": "code",
    "id": "AclfYY3Mn6Ph",
    "outputId": "dd1fef93-d819-4d56-df20-330169907e16"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<PrefetchDataset shapes: ((None, None, 1), (None, None, 1)), types: (tf.float64, tf.float64)>\n",
      "(2500,)\n",
      "Epoch 1/100\n",
      "10/10 [==============================] - 5s 515ms/step - loss: 31.1549 - mae: 31.6551\n",
      "Epoch 2/100\n",
      "10/10 [==============================] - 2s 249ms/step - loss: 30.5849 - mae: 31.0783\n",
      "Epoch 3/100\n",
      "10/10 [==============================] - 2s 245ms/step - loss: 29.6259 - mae: 30.1792\n",
      "Epoch 4/100\n",
      "10/10 [==============================] - 2s 249ms/step - loss: 28.5432 - mae: 29.0582\n",
      "Epoch 5/100\n",
      "10/10 [==============================] - 3s 257ms/step - loss: 27.2554 - mae: 27.6970\n",
      "Epoch 6/100\n",
      "10/10 [==============================] - 3s 257ms/step - loss: 25.4769 - mae: 25.9975\n",
      "Epoch 7/100\n",
      "10/10 [==============================] - 3s 258ms/step - loss: 23.3469 - mae: 23.8407\n",
      "Epoch 8/100\n",
      "10/10 [==============================] - 3s 262ms/step - loss: 20.5459 - mae: 21.1120\n",
      "Epoch 9/100\n",
      "10/10 [==============================] - 3s 261ms/step - loss: 17.2022 - mae: 17.8083\n",
      "Epoch 10/100\n",
      "10/10 [==============================] - 3s 265ms/step - loss: 13.5213 - mae: 14.1192\n",
      "Epoch 11/100\n",
      "10/10 [==============================] - 3s 268ms/step - loss: 10.0173 - mae: 10.6376\n",
      "Epoch 12/100\n",
      "10/10 [==============================] - 3s 273ms/step - loss: 7.5349 - mae: 8.0748\n",
      "Epoch 13/100\n",
      "10/10 [==============================] - 3s 275ms/step - loss: 6.2651 - mae: 6.7677\n",
      "Epoch 14/100\n",
      "10/10 [==============================] - 3s 267ms/step - loss: 5.6793 - mae: 6.1923\n",
      "Epoch 15/100\n",
      "10/10 [==============================] - 3s 269ms/step - loss: 5.3163 - mae: 5.8193\n",
      "Epoch 16/100\n",
      "10/10 [==============================] - 3s 293ms/step - loss: 4.9213 - mae: 5.4211\n",
      "Epoch 17/100\n",
      "10/10 [==============================] - 3s 296ms/step - loss: 4.5471 - mae: 5.0347\n",
      "Epoch 18/100\n",
      "10/10 [==============================] - 3s 298ms/step - loss: 4.2223 - mae: 4.7072\n",
      "Epoch 19/100\n",
      "10/10 [==============================] - 3s 298ms/step - loss: 3.9507 - mae: 4.4370\n",
      "Epoch 20/100\n",
      "10/10 [==============================] - 3s 299ms/step - loss: 3.7300 - mae: 4.2190\n",
      "Epoch 21/100\n",
      "10/10 [==============================] - 3s 298ms/step - loss: 3.5710 - mae: 4.0531\n",
      "Epoch 22/100\n",
      "10/10 [==============================] - 3s 322ms/step - loss: 3.4532 - mae: 3.9356\n",
      "Epoch 23/100\n",
      "10/10 [==============================] - 3s 302ms/step - loss: 3.3683 - mae: 3.8415\n",
      "Epoch 24/100\n",
      "10/10 [==============================] - 3s 313ms/step - loss: 3.2912 - mae: 3.7655\n",
      "Epoch 25/100\n",
      "10/10 [==============================] - 3s 309ms/step - loss: 3.2216 - mae: 3.6977\n",
      "Epoch 26/100\n",
      "10/10 [==============================] - 3s 301ms/step - loss: 3.1604 - mae: 3.6339\n",
      "Epoch 27/100\n",
      "10/10 [==============================] - 3s 307ms/step - loss: 3.0919 - mae: 3.5704\n",
      "Epoch 28/100\n",
      "10/10 [==============================] - 3s 319ms/step - loss: 3.0358 - mae: 3.5040\n",
      "Epoch 29/100\n",
      "10/10 [==============================] - 3s 319ms/step - loss: 2.9695 - mae: 3.4380\n",
      "Epoch 30/100\n",
      "10/10 [==============================] - 3s 321ms/step - loss: 2.9011 - mae: 3.3710\n",
      "Epoch 31/100\n",
      "10/10 [==============================] - 3s 318ms/step - loss: 2.8396 - mae: 3.3076\n",
      "Epoch 32/100\n",
      "10/10 [==============================] - 3s 319ms/step - loss: 2.7809 - mae: 3.2493\n",
      "Epoch 33/100\n",
      "10/10 [==============================] - 3s 321ms/step - loss: 2.7253 - mae: 3.1916\n",
      "Epoch 34/100\n",
      "10/10 [==============================] - 3s 327ms/step - loss: 2.6668 - mae: 3.1348\n",
      "Epoch 35/100\n",
      "10/10 [==============================] - 3s 342ms/step - loss: 2.6189 - mae: 3.0869\n",
      "Epoch 36/100\n",
      "10/10 [==============================] - 3s 316ms/step - loss: 2.5688 - mae: 3.0360\n",
      "Epoch 37/100\n",
      "10/10 [==============================] - 3s 317ms/step - loss: 2.5228 - mae: 2.9878\n",
      "Epoch 38/100\n",
      "10/10 [==============================] - 3s 313ms/step - loss: 2.4764 - mae: 2.9408\n",
      "Epoch 39/100\n",
      "10/10 [==============================] - 3s 302ms/step - loss: 2.4283 - mae: 2.8970\n",
      "Epoch 40/100\n",
      "10/10 [==============================] - 3s 305ms/step - loss: 2.3877 - mae: 2.8538\n",
      "Epoch 41/100\n",
      "10/10 [==============================] - 3s 308ms/step - loss: 2.3455 - mae: 2.8118\n",
      "Epoch 42/100\n",
      "10/10 [==============================] - 3s 315ms/step - loss: 2.3039 - mae: 2.7700\n",
      "Epoch 43/100\n",
      "10/10 [==============================] - 3s 328ms/step - loss: 2.2651 - mae: 2.7302\n",
      "Epoch 44/100\n",
      "10/10 [==============================] - 3s 314ms/step - loss: 2.2304 - mae: 2.6897\n",
      "Epoch 45/100\n",
      "10/10 [==============================] - 3s 331ms/step - loss: 2.1923 - mae: 2.6534\n",
      "Epoch 46/100\n",
      "10/10 [==============================] - 3s 309ms/step - loss: 2.1581 - mae: 2.6186\n",
      "Epoch 47/100\n",
      "10/10 [==============================] - 3s 307ms/step - loss: 2.1310 - mae: 2.5873\n",
      "Epoch 48/100\n",
      "10/10 [==============================] - 3s 308ms/step - loss: 2.0998 - mae: 2.5580\n",
      "Epoch 49/100\n",
      "10/10 [==============================] - 3s 310ms/step - loss: 2.0733 - mae: 2.5342\n",
      "Epoch 50/100\n",
      "10/10 [==============================] - 3s 307ms/step - loss: 2.0455 - mae: 2.5051\n",
      "Epoch 51/100\n",
      "10/10 [==============================] - 3s 310ms/step - loss: 2.0229 - mae: 2.4808\n",
      "Epoch 52/100\n",
      "10/10 [==============================] - 3s 330ms/step - loss: 2.0023 - mae: 2.4607\n",
      "Epoch 53/100\n",
      "10/10 [==============================] - 3s 308ms/step - loss: 1.9794 - mae: 2.4382\n",
      "Epoch 54/100\n",
      "10/10 [==============================] - 3s 310ms/step - loss: 1.9668 - mae: 2.4230\n",
      "Epoch 55/100\n",
      "10/10 [==============================] - 3s 311ms/step - loss: 1.9416 - mae: 2.3984\n",
      "Epoch 56/100\n",
      "10/10 [==============================] - 3s 325ms/step - loss: 1.9267 - mae: 2.3799\n",
      "Epoch 57/100\n",
      "10/10 [==============================] - 3s 329ms/step - loss: 1.9005 - mae: 2.3570\n",
      "Epoch 58/100\n",
      "10/10 [==============================] - 3s 308ms/step - loss: 1.8822 - mae: 2.3411\n",
      "Epoch 59/100\n",
      "10/10 [==============================] - 3s 318ms/step - loss: 1.9078 - mae: 2.3602\n",
      "Epoch 60/100\n",
      "10/10 [==============================] - 3s 310ms/step - loss: 2.2514 - mae: 2.7229\n",
      "Epoch 61/100\n",
      "10/10 [==============================] - 3s 311ms/step - loss: 2.7145 - mae: 3.1916\n",
      "Epoch 62/100\n",
      "10/10 [==============================] - 3s 310ms/step - loss: 3.0265 - mae: 3.5177\n",
      "Epoch 63/100\n",
      "10/10 [==============================] - 3s 308ms/step - loss: 3.5112 - mae: 3.9717\n",
      "Epoch 64/100\n",
      "10/10 [==============================] - 3s 308ms/step - loss: 3.8383 - mae: 4.2865\n",
      "Epoch 65/100\n",
      "10/10 [==============================] - 3s 307ms/step - loss: 4.0929 - mae: 4.5416\n",
      "Epoch 66/100\n",
      "10/10 [==============================] - 3s 308ms/step - loss: 4.3044 - mae: 4.8019\n",
      "Epoch 67/100\n",
      "10/10 [==============================] - 3s 314ms/step - loss: 4.5545 - mae: 5.0755\n",
      "Epoch 68/100\n",
      "10/10 [==============================] - 3s 315ms/step - loss: 4.8045 - mae: 5.3407\n",
      "Epoch 69/100\n",
      "10/10 [==============================] - 3s 320ms/step - loss: 5.1062 - mae: 5.6969\n",
      "Epoch 70/100\n",
      "10/10 [==============================] - 3s 305ms/step - loss: 12.6875 - mae: 12.9624\n",
      "Epoch 71/100\n",
      "10/10 [==============================] - 3s 302ms/step - loss: 4.6206 - mae: 5.1308\n",
      "Epoch 72/100\n",
      "10/10 [==============================] - 3s 307ms/step - loss: 4.3279 - mae: 4.8768\n",
      "Epoch 73/100\n",
      "10/10 [==============================] - 3s 302ms/step - loss: 3.5713 - mae: 4.0910\n",
      "Epoch 74/100\n",
      "10/10 [==============================] - 3s 331ms/step - loss: 3.7354 - mae: 4.2337\n",
      "Epoch 75/100\n",
      "10/10 [==============================] - 3s 320ms/step - loss: 3.2573 - mae: 3.7705\n",
      "Epoch 76/100\n",
      "10/10 [==============================] - 3s 314ms/step - loss: 3.1932 - mae: 3.7098\n",
      "Epoch 77/100\n",
      "10/10 [==============================] - 3s 315ms/step - loss: 3.3850 - mae: 3.8760\n",
      "Epoch 78/100\n",
      "10/10 [==============================] - 3s 310ms/step - loss: 3.6908 - mae: 4.1977\n",
      "Epoch 79/100\n",
      "10/10 [==============================] - 3s 319ms/step - loss: 3.4675 - mae: 3.9992\n",
      "Epoch 80/100\n",
      "10/10 [==============================] - 3s 314ms/step - loss: 3.4285 - mae: 3.9185\n",
      "Epoch 81/100\n",
      "10/10 [==============================] - 3s 313ms/step - loss: 3.0005 - mae: 3.4839\n",
      "Epoch 82/100\n",
      "10/10 [==============================] - 3s 310ms/step - loss: 3.0762 - mae: 3.5502\n",
      "Epoch 83/100\n",
      "10/10 [==============================] - 3s 307ms/step - loss: 4.8041 - mae: 5.2046\n",
      "Epoch 84/100\n",
      "10/10 [==============================] - 3s 305ms/step - loss: 5.1994 - mae: 5.7905\n",
      "Epoch 85/100\n",
      "10/10 [==============================] - 3s 302ms/step - loss: 5.8077 - mae: 6.4062\n",
      "Epoch 86/100\n",
      "10/10 [==============================] - 3s 312ms/step - loss: 12.1425 - mae: 12.3199\n",
      "Epoch 87/100\n",
      "10/10 [==============================] - 3s 304ms/step - loss: 31.1635 - mae: 31.3514\n",
      "Epoch 88/100\n",
      "10/10 [==============================] - 3s 305ms/step - loss: 47.6886 - mae: 47.3069\n",
      "Epoch 89/100\n",
      "10/10 [==============================] - 3s 307ms/step - loss: 57.3007 - mae: 58.4042\n",
      "Epoch 90/100\n",
      "10/10 [==============================] - 3s 331ms/step - loss: 35.8576 - mae: 34.2663\n",
      "Epoch 91/100\n",
      "10/10 [==============================] - 3s 311ms/step - loss: 15.6762 - mae: 16.2985\n",
      "Epoch 92/100\n",
      "10/10 [==============================] - ETA: 0s - loss: 22.1478 - mae: 22.641 - 3s 309ms/step - loss: 21.3978 - mae: 22.2175\n",
      "Epoch 93/100\n",
      "10/10 [==============================] - 3s 303ms/step - loss: 32.7368 - mae: 33.0860\n",
      "Epoch 94/100\n",
      "10/10 [==============================] - 3s 316ms/step - loss: 37.0959 - mae: 37.1717\n",
      "Epoch 95/100\n",
      "10/10 [==============================] - 3s 310ms/step - loss: 41.5104 - mae: 42.2221\n",
      "Epoch 96/100\n",
      "10/10 [==============================] - 3s 306ms/step - loss: 46.7033 - mae: 46.6068\n",
      "Epoch 97/100\n",
      "10/10 [==============================] - 3s 307ms/step - loss: 52.3406 - mae: 53.0522\n",
      "Epoch 98/100\n",
      "10/10 [==============================] - 3s 309ms/step - loss: 58.9331 - mae: 58.7830\n",
      "Epoch 99/100\n",
      "10/10 [==============================] - 3s 316ms/step - loss: 66.0910 - mae: 66.7591\n",
      "Epoch 100/100\n",
      "10/10 [==============================] - 3s 310ms/step - loss: 74.4552 - mae: 74.2181\n"
     ]
    }
   ],
   "source": [
    "tf.keras.backend.clear_session()\n",
    "tf.random.set_seed(51)\n",
    "np.random.seed(51)\n",
    "window_size = 64 #adjust this?\n",
    "batch_size = 256 #adjust this?\n",
    "train_set = windowed_dataset(x_train, window_size, batch_size, shuffle_buffer_size)\n",
    "print(train_set)\n",
    "print(x_train.shape)\n",
    "\n",
    "model = tf.keras.models.Sequential([\n",
    "tf.keras.layers.Conv1D(filters=32, kernel_size=5,\n",
    "                      strides=1, padding=\"causal\",\n",
    "                      activation=\"relu\",\n",
    "                      input_shape=[None, 1]),\n",
    "  tf.keras.layers.LSTM(64, return_sequences=True),\n",
    "  tf.keras.layers.LSTM(64, return_sequences=True),\n",
    "  tf.keras.layers.Dense(30, activation=\"relu\"),\n",
    "  tf.keras.layers.Dense(10, activation=\"relu\"),\n",
    "  tf.keras.layers.Dense(1),\n",
    "  tf.keras.layers.Lambda(lambda x: x * 400) \n",
    "])\n",
    "# Create a learning rate optomizer\n",
    "lr_schedule = tf.keras.callbacks.LearningRateScheduler(\n",
    "    lambda epoch: 1e-8 * 10**(epoch / 20))\n",
    "optimizer = tf.keras.optimizers.SGD(lr=1e-8, momentum=0.9)\n",
    "model.compile(loss=tf.keras.losses.Huber(),\n",
    "              optimizer=optimizer,\n",
    "              metrics=[\"mae\"])\n",
    "history = model.fit(train_set, epochs=100, verbose=1, callbacks=[lr_schedule]) # make verbose=0 to see output\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Plot the learning rate, lr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 290
    },
    "colab_type": "code",
    "id": "vVcKmg7Q_7rD",
    "outputId": "5e9b8029-e996-4a2b-e016-666c69865b11"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1e-08, 0.0001, 0, 60]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.semilogx(history.history[\"lr\"], history.history[\"loss\"])\n",
    "plt.axis([1e-8, 1e-4, 0, 60])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Seems like the best lr = 1e-5 or there about and re-run the training model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "colab_type": "code",
    "id": "QsksvkcXAAgq",
    "outputId": "70263fd4-3c3a-4e93-a451-ee942131e0d4"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/150\n",
      "25/25 [==============================] - 6s 248ms/step - loss: 10.0517 - mae: 10.6767\n",
      "Epoch 2/150\n",
      "25/25 [==============================] - 3s 134ms/step - loss: 2.6036 - mae: 3.0835\n",
      "Epoch 3/150\n",
      "25/25 [==============================] - 3s 133ms/step - loss: 1.9247 - mae: 2.3834\n",
      "Epoch 4/150\n",
      "25/25 [==============================] - 3s 129ms/step - loss: 1.8669 - mae: 2.3214\n",
      "Epoch 5/150\n",
      "25/25 [==============================] - 3s 130ms/step - loss: 1.8193 - mae: 2.2733\n",
      "Epoch 6/150\n",
      "25/25 [==============================] - 3s 128ms/step - loss: 1.7866 - mae: 2.2384\n",
      "Epoch 7/150\n",
      "25/25 [==============================] - 3s 131ms/step - loss: 1.7609 - mae: 2.2117\n",
      "Epoch 8/150\n",
      "25/25 [==============================] - 3s 131ms/step - loss: 1.7381 - mae: 2.1885\n",
      "Epoch 9/150\n",
      "25/25 [==============================] - 3s 131ms/step - loss: 1.7124 - mae: 2.1619\n",
      "Epoch 10/150\n",
      "25/25 [==============================] - 3s 130ms/step - loss: 1.7067 - mae: 2.1555\n",
      "Epoch 11/150\n",
      "25/25 [==============================] - 3s 131ms/step - loss: 1.6749 - mae: 2.1244\n",
      "Epoch 12/150\n",
      "25/25 [==============================] - 3s 130ms/step - loss: 1.6633 - mae: 2.1115\n",
      "Epoch 13/150\n",
      "25/25 [==============================] - 3s 130ms/step - loss: 1.6477 - mae: 2.0955\n",
      "Epoch 14/150\n",
      "25/25 [==============================] - 4s 140ms/step - loss: 1.6359 - mae: 2.0827\n",
      "Epoch 15/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.6272 - mae: 2.0734\n",
      "Epoch 16/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.6224 - mae: 2.0677\n",
      "Epoch 17/150\n",
      "25/25 [==============================] - 4s 148ms/step - loss: 1.6093 - mae: 2.0534\n",
      "Epoch 18/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.6023 - mae: 2.0468\n",
      "Epoch 19/150\n",
      "25/25 [==============================] - 4s 145ms/step - loss: 1.5969 - mae: 2.0409\n",
      "Epoch 20/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.5906 - mae: 2.0349\n",
      "Epoch 21/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.5840 - mae: 2.0270\n",
      "Epoch 22/150\n",
      "25/25 [==============================] - 4s 150ms/step - loss: 1.5778 - mae: 2.0221\n",
      "Epoch 23/150\n",
      "25/25 [==============================] - 4s 148ms/step - loss: 1.5773 - mae: 2.0227\n",
      "Epoch 24/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.5771 - mae: 2.0214\n",
      "Epoch 25/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.5659 - mae: 2.0102\n",
      "Epoch 26/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.5634 - mae: 2.0057\n",
      "Epoch 27/150\n",
      "25/25 [==============================] - 4s 144ms/step - loss: 1.5608 - mae: 2.0042\n",
      "Epoch 28/150\n",
      "25/25 [==============================] - 4s 146ms/step - loss: 1.5679 - mae: 2.0110\n",
      "Epoch 29/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.5567 - mae: 1.9995\n",
      "Epoch 30/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.5516 - mae: 1.9948\n",
      "Epoch 31/150\n",
      "25/25 [==============================] - 4s 140ms/step - loss: 1.5492 - mae: 1.9915\n",
      "Epoch 32/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.5468 - mae: 1.9900\n",
      "Epoch 33/150\n",
      "25/25 [==============================] - 4s 144ms/step - loss: 1.5483 - mae: 1.9915\n",
      "Epoch 34/150\n",
      "25/25 [==============================] - 4s 140ms/step - loss: 1.5437 - mae: 1.9875\n",
      "Epoch 35/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.5412 - mae: 1.9837\n",
      "Epoch 36/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.5397 - mae: 1.9818\n",
      "Epoch 37/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.5352 - mae: 1.9796\n",
      "Epoch 38/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.5400 - mae: 1.9834\n",
      "Epoch 39/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.5345 - mae: 1.9776\n",
      "Epoch 40/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.5363 - mae: 1.9788\n",
      "Epoch 41/150\n",
      "25/25 [==============================] - 4s 144ms/step - loss: 1.5324 - mae: 1.9761\n",
      "Epoch 42/150\n",
      "25/25 [==============================] - 4s 151ms/step - loss: 1.5314 - mae: 1.9725\n",
      "Epoch 43/150\n",
      "25/25 [==============================] - 4s 154ms/step - loss: 1.5302 - mae: 1.9734\n",
      "Epoch 44/150\n",
      "25/25 [==============================] - 4s 144ms/step - loss: 1.5313 - mae: 1.9737\n",
      "Epoch 45/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.5277 - mae: 1.9721\n",
      "Epoch 46/150\n",
      "25/25 [==============================] - 4s 144ms/step - loss: 1.5263 - mae: 1.9685\n",
      "Epoch 47/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.5255 - mae: 1.9675\n",
      "Epoch 48/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.5252 - mae: 1.9666\n",
      "Epoch 49/150\n",
      "25/25 [==============================] - 4s 147ms/step - loss: 1.5220 - mae: 1.9652\n",
      "Epoch 50/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.5244 - mae: 1.9673\n",
      "Epoch 51/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.5221 - mae: 1.9639\n",
      "Epoch 52/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.5236 - mae: 1.9646\n",
      "Epoch 53/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.5210 - mae: 1.9628\n",
      "Epoch 54/150\n",
      "25/25 [==============================] - 4s 149ms/step - loss: 1.5206 - mae: 1.9619\n",
      "Epoch 55/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.5191 - mae: 1.9602\n",
      "Epoch 56/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.5169 - mae: 1.9570\n",
      "Epoch 57/150\n",
      "25/25 [==============================] - 4s 151ms/step - loss: 1.5168 - mae: 1.9587\n",
      "Epoch 58/150\n",
      "25/25 [==============================] - 4s 148ms/step - loss: 1.5155 - mae: 1.9564\n",
      "Epoch 59/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.5152 - mae: 1.9587\n",
      "Epoch 60/150\n",
      "25/25 [==============================] - 3s 140ms/step - loss: 1.5183 - mae: 1.9574\n",
      "Epoch 61/150\n",
      "25/25 [==============================] - 4s 144ms/step - loss: 1.5109 - mae: 1.9534\n",
      "Epoch 62/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.5088 - mae: 1.9529\n",
      "Epoch 63/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.5114 - mae: 1.9529\n",
      "Epoch 64/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.5112 - mae: 1.9535\n",
      "Epoch 65/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.5086 - mae: 1.9502\n",
      "Epoch 66/150\n",
      "25/25 [==============================] - 4s 140ms/step - loss: 1.5103 - mae: 1.9524\n",
      "Epoch 67/150\n",
      "25/25 [==============================] - 4s 145ms/step - loss: 1.5067 - mae: 1.9494\n",
      "Epoch 68/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.5132 - mae: 1.9549\n",
      "Epoch 69/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.5093 - mae: 1.9515\n",
      "Epoch 70/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.5043 - mae: 1.9466\n",
      "Epoch 71/150\n",
      "25/25 [==============================] - 4s 151ms/step - loss: 1.5030 - mae: 1.9462\n",
      "Epoch 72/150\n",
      "25/25 [==============================] - 4s 144ms/step - loss: 1.5033 - mae: 1.9450\n",
      "Epoch 73/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.5040 - mae: 1.9453\n",
      "Epoch 74/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.5038 - mae: 1.9451\n",
      "Epoch 75/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.5042 - mae: 1.9460\n",
      "Epoch 76/150\n",
      "25/25 [==============================] - 4s 144ms/step - loss: 1.5018 - mae: 1.9448\n",
      "Epoch 77/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.5028 - mae: 1.9452\n",
      "Epoch 78/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.5065 - mae: 1.9491\n",
      "Epoch 79/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.5034 - mae: 1.9448\n",
      "Epoch 80/150\n",
      "25/25 [==============================] - 4s 144ms/step - loss: 1.5010 - mae: 1.9427\n",
      "Epoch 81/150\n",
      "25/25 [==============================] - 4s 161ms/step - loss: 1.5005 - mae: 1.9432\n",
      "Epoch 82/150\n",
      "25/25 [==============================] - 4s 149ms/step - loss: 1.5003 - mae: 1.9439\n",
      "Epoch 83/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.5013 - mae: 1.9442\n",
      "Epoch 84/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.4960 - mae: 1.9387\n",
      "Epoch 85/150\n",
      "25/25 [==============================] - 4s 152ms/step - loss: 1.4971 - mae: 1.9366\n",
      "Epoch 86/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.4982 - mae: 1.9405\n",
      "Epoch 87/150\n",
      "25/25 [==============================] - 4s 144ms/step - loss: 1.4964 - mae: 1.9384\n",
      "Epoch 88/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4952 - mae: 1.9352\n",
      "Epoch 89/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.4950 - mae: 1.9356\n",
      "Epoch 90/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4933 - mae: 1.9346\n",
      "Epoch 91/150\n",
      "25/25 [==============================] - 3s 138ms/step - loss: 1.4919 - mae: 1.9348\n",
      "Epoch 92/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4975 - mae: 1.9368\n",
      "Epoch 93/150\n",
      "25/25 [==============================] - 3s 140ms/step - loss: 1.4916 - mae: 1.9330\n",
      "Epoch 94/150\n",
      "25/25 [==============================] - 3s 138ms/step - loss: 1.4918 - mae: 1.9325\n",
      "Epoch 95/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.4905 - mae: 1.9315\n",
      "Epoch 96/150\n",
      "25/25 [==============================] - 3s 138ms/step - loss: 1.4960 - mae: 1.9371\n",
      "Epoch 97/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4921 - mae: 1.9334\n",
      "Epoch 98/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4901 - mae: 1.9294\n",
      "Epoch 99/150\n",
      "25/25 [==============================] - 3s 138ms/step - loss: 1.4878 - mae: 1.9296\n",
      "Epoch 100/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4896 - mae: 1.9289\n",
      "Epoch 101/150\n",
      "25/25 [==============================] - 3s 138ms/step - loss: 1.4894 - mae: 1.9305\n",
      "Epoch 102/150\n",
      "25/25 [==============================] - 4s 144ms/step - loss: 1.4893 - mae: 1.9317\n",
      "Epoch 103/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.4884 - mae: 1.9284\n",
      "Epoch 104/150\n",
      "25/25 [==============================] - 4s 161ms/step - loss: 1.4889 - mae: 1.9288\n",
      "Epoch 105/150\n",
      "25/25 [==============================] - 5s 190ms/step - loss: 1.4868 - mae: 1.9287\n",
      "Epoch 106/150\n",
      "25/25 [==============================] - 4s 148ms/step - loss: 1.4873 - mae: 1.9306\n",
      "Epoch 107/150\n",
      "25/25 [==============================] - 3s 140ms/step - loss: 1.4852 - mae: 1.9261\n",
      "Epoch 108/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.4870 - mae: 1.9284\n",
      "Epoch 109/150\n",
      "25/25 [==============================] - 4s 140ms/step - loss: 1.4843 - mae: 1.9262\n",
      "Epoch 110/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.4835 - mae: 1.9262\n",
      "Epoch 111/150\n",
      "25/25 [==============================] - 4s 144ms/step - loss: 1.4823 - mae: 1.9230\n",
      "Epoch 112/150\n",
      "25/25 [==============================] - 3s 138ms/step - loss: 1.4821 - mae: 1.9231\n",
      "Epoch 113/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.4812 - mae: 1.9221\n",
      "Epoch 114/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.4812 - mae: 1.9224\n",
      "Epoch 115/150\n",
      "25/25 [==============================] - 4s 140ms/step - loss: 1.4814 - mae: 1.9215\n",
      "Epoch 116/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.4805 - mae: 1.9222\n",
      "Epoch 117/150\n",
      "25/25 [==============================] - 3s 138ms/step - loss: 1.4806 - mae: 1.9208\n",
      "Epoch 118/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4787 - mae: 1.9207\n",
      "Epoch 119/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.4789 - mae: 1.9211\n",
      "Epoch 120/150\n",
      "25/25 [==============================] - 4s 148ms/step - loss: 1.4830 - mae: 1.9232\n",
      "Epoch 121/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.4779 - mae: 1.9194\n",
      "Epoch 122/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4841 - mae: 1.9269\n",
      "Epoch 123/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.4790 - mae: 1.9205\n",
      "Epoch 124/150\n",
      "25/25 [==============================] - 4s 140ms/step - loss: 1.4816 - mae: 1.9224\n",
      "Epoch 125/150\n",
      "25/25 [==============================] - 3s 138ms/step - loss: 1.4795 - mae: 1.9196\n",
      "Epoch 126/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4807 - mae: 1.9207\n",
      "Epoch 127/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4786 - mae: 1.9204\n",
      "Epoch 128/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.4779 - mae: 1.9193\n",
      "Epoch 129/150\n",
      "25/25 [==============================] - 4s 151ms/step - loss: 1.4788 - mae: 1.9184\n",
      "Epoch 130/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.4786 - mae: 1.9200\n",
      "Epoch 131/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.4775 - mae: 1.9194\n",
      "Epoch 132/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.4781 - mae: 1.9199\n",
      "Epoch 133/150\n",
      "25/25 [==============================] - 4s 140ms/step - loss: 1.4804 - mae: 1.9225\n",
      "Epoch 134/150\n",
      "25/25 [==============================] - 4s 142ms/step - loss: 1.4765 - mae: 1.9175\n",
      "Epoch 135/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4744 - mae: 1.9158\n",
      "Epoch 136/150\n",
      "25/25 [==============================] - 4s 149ms/step - loss: 1.4768 - mae: 1.9170\n",
      "Epoch 137/150\n",
      "25/25 [==============================] - 4s 140ms/step - loss: 1.4754 - mae: 1.9167\n",
      "Epoch 138/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4758 - mae: 1.9159\n",
      "Epoch 139/150\n",
      "25/25 [==============================] - 4s 143ms/step - loss: 1.4760 - mae: 1.9170\n",
      "Epoch 140/150\n",
      "25/25 [==============================] - 3s 140ms/step - loss: 1.4764 - mae: 1.9166\n",
      "Epoch 141/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.4748 - mae: 1.9159\n",
      "Epoch 142/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4704 - mae: 1.9136\n",
      "Epoch 143/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4771 - mae: 1.9173\n",
      "Epoch 144/150\n",
      "25/25 [==============================] - 3s 140ms/step - loss: 1.4732 - mae: 1.9151\n",
      "Epoch 145/150\n",
      "25/25 [==============================] - 4s 141ms/step - loss: 1.4835 - mae: 1.9235\n",
      "Epoch 146/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4721 - mae: 1.9140\n",
      "Epoch 147/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4723 - mae: 1.9134\n",
      "Epoch 148/150\n",
      "25/25 [==============================] - 3s 139ms/step - loss: 1.4728 - mae: 1.9134\n",
      "Epoch 149/150\n",
      "25/25 [==============================] - 3s 140ms/step - loss: 1.4737 - mae: 1.9152\n",
      "Epoch 150/150\n",
      "25/25 [==============================] - 4s 140ms/step - loss: 1.4764 - mae: 1.9178\n"
     ]
    }
   ],
   "source": [
    "tf.keras.backend.clear_session()\n",
    "tf.random.set_seed(51)\n",
    "np.random.seed(51)\n",
    "window_size = 64\n",
    "batch_size = 100 # 2nd, change this to power of 2 multiple(128), 3rd, 64, back to 100\n",
    "train_set = windowed_dataset(x_train, window_size, batch_size, shuffle_buffer=shuffle_buffer_size)\n",
    "model = tf.keras.models.Sequential([\n",
    "tf.keras.layers.Conv1D(filters=60, kernel_size=5,\n",
    "                      strides=1, padding=\"causal\",\n",
    "                      activation=\"relu\",\n",
    "                      input_shape=[None, 1]),\n",
    "  tf.keras.layers.LSTM(60, return_sequences=True),\n",
    "  tf.keras.layers.LSTM(60, return_sequences=True),\n",
    "  tf.keras.layers.Dense(30, activation=\"relu\"),\n",
    "  tf.keras.layers.Dense(10, activation=\"relu\"),\n",
    "  tf.keras.layers.Dense(1),\n",
    "  tf.keras.layers.Lambda(lambda x: x * 400) # YOUR CODE HERE\n",
    "])\n",
    "\n",
    "\n",
    "optimizer = tf.keras.optimizers.SGD(lr= 1e-5, momentum=0.9)\n",
    "model.compile(loss=tf.keras.losses.Huber(),\n",
    "              optimizer=optimizer,\n",
    "              metrics=[\"mae\"])\n",
    "history = model.fit(train_set,epochs= 150) # 1st, increase epoch by 80, \n",
    "                                    \n",
    "# EXPECTED OUTPUT SHOULD SEE AN MAE OF <2 WITHIN ABOUT 30 EPOCHS"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Predicting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "GaC6NNMRp0lb"
   },
   "outputs": [],
   "source": [
    "rnn_forecast = model_forecast(model, series[..., np.newaxis], window_size)\n",
    "rnn_forecast = rnn_forecast[split_time - window_size:-1, -1, 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "izy6wl2S9d-2"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 6))\n",
    "plot_series(time_valid, x_valid)\n",
    "plot_series(time_valid, rnn_forecast)\n",
    "\n",
    "# EXPECTED OUTPUT. PLOT SHOULD SHOW PROJECTIONS FOLLOWING ORIGINAL DATA CLOSELY"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Validation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "13XrorC5wQoE",
    "outputId": "7f5bda4a-160c-4c0f-e511-a5a1b6945d35"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.7792915"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tf.keras.metrics.mean_absolute_error(x_valid, rnn_forecast).numpy()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "colab_type": "code",
    "id": "AOVzQXxCwkzP",
    "outputId": "3b3fd11c-f9b3-4cbd-e32d-2d7d22b6ff7f"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[11.653368 11.004736 12.224517 13.428077 11.24311  11.223834 12.044834\n",
      " 12.625164 11.843083 10.656471]\n",
      "[11.  12.6 14.7 11.1 10.1 11.4 13.  11.9  9.5 13.5]\n"
     ]
    }
   ],
   "source": [
    "print(rnn_forecast[:10])\n",
    "# EXPECTED OUTPUT -- ARRAY OF VALUES IN THE LOW TEENS\n",
    "print(x_valid[:10])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Show the training loss curves"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.image  as mpimg\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "#-----------------------------------------------------------\n",
    "# Retrieve a list of list results on training and test data\n",
    "# sets for each training epoch\n",
    "#-----------------------------------------------------------\n",
    "loss=history.history['loss']\n",
    "\n",
    "epochs=range(len(loss)) # Get number of epochs\n",
    "\n",
    "\n",
    "#------------------------------------------------\n",
    "# Plot training and validation loss per epoch\n",
    "#------------------------------------------------\n",
    "plt.plot(epochs, loss, 'r')\n",
    "plt.title('Training loss')\n",
    "plt.xlabel(\"Epochs\")\n",
    "plt.ylabel(\"Loss\")\n",
    "plt.legend([\"Loss\"])\n",
    "\n",
    "plt.figure()\n",
    "\n",
    "\n",
    "\n",
    "zoomed_loss = loss[45:]\n",
    "zoomed_epochs = range(45,150)\n",
    "\n",
    "\n",
    "#------------------------------------------------\n",
    "# Plot training and validation loss per epoch\n",
    "#------------------------------------------------\n",
    "plt.plot(zoomed_epochs, zoomed_loss, 'r')\n",
    "plt.title('Training loss')\n",
    "plt.xlabel(\"Epochs\")\n",
    "plt.ylabel(\"Loss\")\n",
    "plt.legend([\"Loss\"])\n",
    "\n",
    "plt.figure()"
   ]
  }
 ],
 "metadata": {
  "accelerator": "GPU",
  "colab": {
   "collapsed_sections": [],
   "name": "S+P Week 4 Exercise Question.ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
